name: CI workflow

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
    types: [opened, synchronize, reopened]

jobs:
  integrated-test:
    name: Integrated Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: getactive
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize database
        run: |
          mysql -h127.0.0.1 -P3306 -uroot -ppassword getactive < ./code/database/01-init.sql
      
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Run backend tests
        working-directory: ./code/backend/getactivecore
        run: |
          ./gradlew test
        # env:
        #   SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/getactive
        #   SPRING_DATASOURCE_USERNAME: root
        #   SPRING_DATASOURCE_PASSWORD: password
      
      - name: Upload Problems Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: problems-report
          path: code/backend/getactivecore/build/reports/tests/test/
          
      - name: Build and start backend service
        working-directory: ./code/backend/getactivecore
        run: |
          ./gradlew build -x test
          
          nohup java -jar build/libs/getactivecore-0.0.1-SNAPSHOT.jar \
            > backend.log 2>&1 &
          
          echo "Waiting for backend service to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3232/v1/health | grep -q "UP"; then
              echo "Backend service is up!"
              break
            fi
            
            if [ $i -eq 30 ]; then
              echo "Backend service failed to start within timeout"
              cat backend.log
              exit 1
            fi
            
            echo "Waiting... ($i/30)"
            sleep 2
          done
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './code/frontend/package-lock.json'
      
      - name: Run frontend tests
        working-directory: ./code/frontend/
        run: |
          npm ci

      # - name: Build Frontend Application
      #   working-directory: ./code/frontend
      #   run: npm run build 

      # - name: Serve Frontend Application (using serve package)
      #   working-directory: ./code/frontend
      #   run: |
      #     npm install -g serve
      #     serve -s build -l 5173 &
      #     echo "Waiting for frontend service to start..."
      #     for i in {1..30}; do
      #       if curl -s http://localhost:5173; then
      #         echo "Frontend service is up!"
      #         break
      #       fi
      #       if [ $i -eq 30 ]; then
      #         echo "Frontend service failed to start within timeout"
      #         exit 1
      #       fi
      #       echo "Waiting... ($i/30)"
      #       sleep 1
      #     done

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          #build: npm run build # 这个 build 命令在前面已经执行过了，可以省略或改为 'npm run start' 如果有
          working-directory: ./code/frontend
          start: npm run dev # 这个 start 命令在前面已经执行过了，可以省略或改为 'npm run start' 如果有
          wait-on: 'http://localhost:5173' # Cypress 会等待这个URL可用
          wait-on-timeout: 120 # 等待超时时间（秒）
          project: ./code/frontend # 指定 Cypress 项目的路径
          browser: chrome # 可以是 chrome, firefox, edge
          # 如果你不想看视频，可以设置 record: false
          # record: false # 如果你没有 Cypress Cloud 账号，设为 false
        # env:
        #   # 如果 Cypress 测试内部需要环境变量，可以在这里设置
        #   CYPRESS_BASE_URL: http://localhost:5173 # 确保 Cypress 访问正确的前端URL

      # --- 上传测试结果和报告 ---
      - name: Upload Cypress Test Artifacts (Videos & Screenshots)
        uses: actions/upload-artifact@v4
        if: always() # 无论测试通过与否都上传
        with:
          name: cypress-e2e-artifacts
          path: |
            ./code/frontend/cypress/videos # Cypress 录制的视频
            ./code/frontend/cypress/screenshots # Cypress 截取的屏幕截图
            ./code/frontend/cypress/reports/junit.xml # 示例 JUnit 报告路径
      
      # - name: Upload Frontend JUnit Report
      #   uses: actions/upload-artifact@v4
      #   if: always() 
      #   with:
      #     name: frontend-junit-report
      #     path: code/frontend/test-results/junit.xml 

      # - name: Upload Frontend Coverage Report
      #   uses: actions/upload-artifact@v4
      #   if: always() 
      #   with:
      #     name: frontend-coverage-report
      #     path: code/frontend/coverage/