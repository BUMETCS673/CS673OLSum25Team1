version: '3.8'

services:
  db:
    image: ghcr.io/${GITHUB_REPOSITORY:-woody/CS673OLSum25Team1}/db:${TAG:-latest}
    container_name: getactive-db
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-woody/CS673OLSum25Team1}/backend:${TAG:-latest}
    container_name: getactive-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
    networks:
      - backend-network
      - frontend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3232/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: ghcr.io/${GITHUB_REPOSITORY:-woody/CS673OLSum25Team1}/nginx:${TAG:-latest}
    container_name: getactive-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - db
      - backend
    networks:
      - frontend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 